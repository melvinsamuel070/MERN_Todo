name: CI Pipeline

on:
  workflow_run:
    workflows: ["CD"]
    types:
      - completed

env:
  BACKEND_IMAGE: melvinsamuel070/backend:latest
  FRONTEND_IMAGE: melvinsamuel070/frontend1:latest
  ALERTMANAGER_URL: http://localhost:9092/api/v2/alerts

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        id: checkout
      
      - name: Print Debug Info - Branch and Commit
        run: |
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Images with Docker Compose
        run: |
          docker compose -f docker-compose.yaml build

      - name: Run Docker Compose Services
        run: |
          docker compose -f docker compose.yaml up -d

      - name: Wait for Backend to be Ready
        run: |
          for i in {1..10}; do 
            if curl -s -f http://localhost:3500; then 
              echo "Backend is up and running!"; 
              break; 
            fi; 
            echo "Waiting for Backend to be ready..."; 
            sleep 6; 
          done

      - name: Upload Build Logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          path: |
            ./backend/build.log
            ./frontend/build.log

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Backend Image to Docker Hub
        run: docker push ${{ env.BACKEND_IMAGE }}

      - name: Push Frontend Image to Docker Hub
        run: docker push ${{ env.FRONTEND_IMAGE }}

      - name: Start Alertmanager (If Needed)
        run: |
          docker run -d -p 9092:9093 --name alertmanager prom/alertmanager:v0.27.0

      - name: Wait for Alertmanager to be ready
        run: |
          for i in {1..10}; do 
            if curl -s -f http://localhost:9092; then 
              echo "Alertmanager is up and running!"; 
              break; 
            fi; 
            echo "Waiting for Alertmanager to be ready..."; 
            sleep 6; 
          done

      - name: Notify Alertmanager of Build Success
        run: |
            response=$(curl -s -o /dev/null -w "%{http_code}" -X POST -H "Content-Type: application/json" -d '[
              {
                "labels": {
                  "alertname": "BuildSuccess",
                  "severity": "info",
                  "team": "development",
                  "environment": "production"
                },
                "annotations": {
                  "summary": "Build Successful",
                  "description": "The latest build was successful."
                }
              }
            ]' http://localhost:9092/api/v2/alerts)
        
            echo "Response Code: $response"
        
            if [ "$response" -ne 200 ]; then
              echo "Failed to notify Alertmanager: HTTP Status $response"
              exit 1
            else
              echo "Successfully notified Alertmanager of build success."
            fi
        
      - name: Send Email Notification for Build Success
        uses: dawidd6/action-send-mail@v3
        with:
            server_address: smtp.gmail.com
            server_port: 587
            username: ${{ secrets.EMAIL_USERNAME }}
            password: ${{ secrets.EMAIL_PASSWORD }}
            subject: "Build Success: CI Pipeline"
            body: "The build stage of your CI pipeline completed successfully."
            to: kingsamuel412@gmail.com
            from: ${{ secrets.EMAIL_USERNAME }}

  trigger_cd:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Trigger CD Pipeline
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"event_type": "start_cd_pipeline"}' \
            "https://api.github.com/repos/${{ github.repository }}/dispatches"
