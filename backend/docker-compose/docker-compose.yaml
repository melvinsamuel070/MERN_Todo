

# services:
#   # Frontend Service
#   frontend:
#     image: melvinsamuel070/frontend1:latest
#     environment:
#       - REACT_APP_BACKEND_URL=http://backend:3500  # Backend service URL
#     ports:
#       - "3000:3000"
#     networks:
#       - mern_network

#   # Backend Service
#   backend:
#     image: melvinsamuel070/backend:latest
#     environment:
#       - DB_URL=${DB_URL}
#       - PORT=${PORT}
#     networks:
#       - mern_network
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:3500/health"]
#       interval: 30s
#       retries: 3

#   nginx:
#   image: nginx:latest
#   volumes:
#     - ./nginx.conf:/etc/nginx/nginx.conf  # Mount custom Nginx configuration file
#     - ./frontend/build:/usr/share/nginx/html  # Mount React build directory
#   ports:
#     - "8080:80"  # Expose Nginx on port 8080
#   networks:
#     - mern_network
#   depends_on:
#     - frontend
#     - backend


# networks:
#   mern_network:
#     driver: bridge










# services:
#   # Frontend Service
#   frontend:
#     image: melvinsamuel070/frontend1:latest
#     environment:
#       - REACT_APP_BACKEND_URL=http://backend:3500  # Backend service URL
#     ports:
#       - "3000:3000"
#     networks:
#       - mern_network
#     restart: always

#   # Backend Service
#   backend:
#     image: melvinsamuel070/backend:latest
#     environment:
#       - DB_URL=${DB_URL}
#       - PORT=${PORT}
#     networks:
#       - mern_network
#     restart: always
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:3500/health"]
#       interval: 30s
#       retries: 3

#   # Nginx Service
#   nginx:
#     image: nginx:latest
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf  # Mount custom Nginx configuration file
#       - ../frontend/build:/usr/share/nginx/html  # Mount React build directory (use relative path to frontend)
#     ports:
#       - "8080:80"  # Expose Nginx on port 8080
#     networks:
#       - mern_network
#     restart: always
#     depends_on:
#       - frontend
#       - backend

# networks:
#   mern_network:
#     driver: bridge





# services:
#   # Frontend Service
#   frontend:
#     image: melvinsamuel070/frontend1:latest
#     environment:
#       - REACT_APP_BACKEND_URL=http://backend:3500  # Ensure this matches the backend service name in Docker
#     ports:
#       - "3000:3000"
#     networks:
#       - mern_network
#     restart: always

#   # Backend Service
#   backend:
#     image: melvinsamuel070/backend:latest
#     environment:
#       - DB_URL=${DB_URL}
#       - PORT=${PORT}
#     networks:
#       - mern_network
#     restart: always
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:3500/health"]  # Make sure '/health' is implemented
#       interval: 30s
#       retries: 3

#   # Nginx Service
#   nginx:
#     image: nginx:latest
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf  # Ensure custom Nginx config file is correctly mounted
#       - ../frontend/build:/usr/share/nginx/html  # Ensure correct path to React build directory
#       - ./nginx_logs:/var/log/nginx  # Mount a local directory for logs
#     ports:
#       - "8080:80"  # Expose Nginx on port 8080
#     networks:
#       - mern_network
#     restart: always
#     depends_on:
#       - frontend
#       - backend

# networks:
#   mern_network:
#     driver: bridge



services:
  frontend:
    image: melvinsamuel070/frontend1:latest
    environment:
      - REACT_APP_BACKEND_URL=http://backend:3500
    networks:
      - mern_network
    ports:
      - "3000:3000"
    restart: always

  backend:
    image: melvinsamuel070/backend:latest
    environment:
      - DB_URL=${DB_URL}
      - PORT=${PORT}
    networks:
      - mern_network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3500/health"]
      interval: 30s
      retries: 3

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ../frontend/build:/usr/share/nginx/html
      - ./nginx_logs:/var/log/nginx  # Mount a local directory for logs
    networks:
      - mern_network
    ports:
      - "8080:80"
    depends_on:
      - frontend
      - backend
    restart: always

networks:
  mern_network:
    driver: bridge
