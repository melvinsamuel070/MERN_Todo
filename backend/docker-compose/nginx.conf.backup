# # nginx.conf




# events {
#     worker_connections 1024;
# }

# http {
#     include       mime.types;
#     default_type  application/octet-stream;

#     server {
#         listen 80;

#         # Serve frontend at the root URL
#         location / {
#             proxy_pass http://frontend:3000/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Serve backend at /api
#         location /api/ {
#             proxy_pass http://backend:3500/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Catch all 404 errors
#         error_page 404 /404.html;
#         location = /404.html {
#             root /usr/share/nginx/html;
#         }
#     }
# }





















# events {
#     worker_connections 1024;
# }

# http {
#     server {
#         listen 80;

#         # Serve frontend at the root URL
#         location / {
#             proxy_pass http://frontend:3000;  # Proxy to frontend container
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Serve backend at /todo
#         location /todo/ {
#             proxy_pass http://backend:3500/;  # Proxy to backend container with path
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Catch all 404 errors
#         error_page 404 /404.html;
#         location = /404.html {
#             root /usr/share/nginx/html;
#         }
#     }
# }



# server {
#     listen 80;
#     server_name localhost;

#     # Frontend
#     location / {
#         root /path/to/frontend;
#         index index.html;
#     }

#     # API (Backend)
#     location /toto/ {
#         proxy_pass http://localhost:3500;  # Assuming backend runs on port 3500
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }




# events {
#     worker_connections 1024;
# }

# http {
#     server {
#         listen 80;

#         # Serve frontend at the root URL
#         location / {
#             proxy_pass http://frontend:3000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Serve backend at /todo
#         location /todo/ {
#             proxy_pass http://backend:3500;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Catch all 404 errors
#         error_page 404 /404.html;
#         location = /404.html {
#             root /usr/share/nginx/html;
#         }
#     }
# }






server {
    listen 80;
    server_name frontend.melvinsamuel.xyz;

    location / {
        proxy_pass http://frontend:3000;  # frontend service inside the Docker network
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 80;
    server_name backend.melvinsamuel.xyz;

    location / {
        proxy_pass http://backend:3500;  # backend service inside the Docker network
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
